package me.kansio.client.modules.impl.exploit.disabler.watchdog;

import me.kansio.client.event.PacketDirection;
import me.kansio.client.event.impl.PacketEvent;
import me.kansio.client.event.impl.UpdateEvent;
import me.kansio.client.modules.impl.exploit.disabler.DisablerMode;
import me.kansio.client.utils.chat.ChatUtil;
import me.kansio.client.utils.network.PacketUtil;
import net.minecraft.network.Packet;
import net.minecraft.network.play.INetHandlerPlayClient;
import net.minecraft.network.play.INetHandlerPlayServer;
import net.minecraft.network.play.client.C00PacketKeepAlive;
import net.minecraft.network.play.client.C08PacketPlayerBlockPlacement;
import net.minecraft.network.play.client.C0FPacketConfirmTransaction;
import net.minecraft.network.status.client.C01PacketPing;

import java.util.LinkedList;

public class WatchDogTimer extends DisablerMode {
    private LinkedList<Packet<? extends INetHandlerPlayServer>> tenTickPacketQueue = new LinkedList<>();
    private boolean tenTicking = false;

    public WatchDogTimer() {
        super("Hypixel Timer");
    }

    @Override
    public void onEnable() {
        tenTickPacketQueue.clear();
        tenTicking = true;
    }

    @Override
    public void onUpdate(UpdateEvent event) {
        if (!event.isPre()) return;

        if (mc.thePlayer.ticksExisted % 10 == 0) {
            for (Packet<? extends INetHandlerPlayServer> packet : tenTickPacketQueue) {
                PacketUtil.sendPacketNoEvent(packet);
            }
            tenTickPacketQueue.clear();
        } else {
            tenTicking = true;
        }
    }

    @Override
    public void onPacket(PacketEvent event) {
        if (tenTicking && event.getPacketDirection() == PacketDirection.INBOUND) {
            tenTickPacketQueue.add(event.getPacket());
            event.setCancelled(true);
        }
    }
}
