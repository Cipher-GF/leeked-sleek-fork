package me.kansio.client.modules.impl.exploit.disabler.verus;

import me.kansio.client.event.impl.PacketEvent;
import me.kansio.client.event.impl.UpdateEvent;
import me.kansio.client.modules.impl.exploit.disabler.DisablerMode;
import me.kansio.client.utils.math.Stopwatch;
import me.kansio.client.utils.network.PacketUtil;
import net.minecraft.network.Packet;
import net.minecraft.network.play.client.C00PacketKeepAlive;
import net.minecraft.network.play.client.C03PacketPlayer;
import net.minecraft.network.play.client.C0FPacketConfirmTransaction;
import net.minecraft.network.play.server.S08PacketPlayerPosLook;

import java.util.LinkedList;

public class OldVerus extends DisablerMode {

    private LinkedList<Packet> packetQueue = new LinkedList<>();
    private boolean expectedTeleport;
    private Stopwatch timer = new Stopwatch();

    public OldVerus() {
        super("Old Verus");
    }

    @Override
    public void onEnable() {
        timer.resetTime();
        this.expectedTeleport = false;
    }

    @Override
    public void onPacket(PacketEvent event) {
        if (!this.shouldRun()) return;

        if (event.getPacket() instanceof C0FPacketConfirmTransaction
                || event.getPacket() instanceof C00PacketKeepAlive) {

            short action = -1;

            if (event.getPacket() instanceof C0FPacketConfirmTransaction) {
                action = ((C0FPacketConfirmTransaction) event.getPacket()).getUid();
            }

            if (action != -1 && this.isInventory(action)) return;

            //event.setCancelled(true);
            this.packetQueue.add(event.getPacket());
        }

        if (event.getPacket() instanceof C03PacketPlayer) {
            C03PacketPlayer c03PacketPlayer = event.getPacket();


            if (mc.thePlayer.ticksExisted % 25 == 0) {
                this.expectedTeleport = true;

                c03PacketPlayer.setMoving(false);
                c03PacketPlayer.y = -0.015625;
                c03PacketPlayer.onGround = false;
            }
        }

        if (event.getPacket() instanceof S08PacketPlayerPosLook && this.expectedTeleport) {
            S08PacketPlayerPosLook s08PacketPlayerPosLook = event.getPacket();
            this.expectedTeleport = false;

            event.setCancelled(true);

            PacketUtil.sendPacketNoEvent(new C03PacketPlayer
                    .C06PacketPlayerPosLook(s08PacketPlayerPosLook.getX(),
                    s08PacketPlayerPosLook.getY(),
                    s08PacketPlayerPosLook.getZ(),
                    s08PacketPlayerPosLook.getYaw(),
                    s08PacketPlayerPosLook.getPitch(), true));
        }
    }

    @Override
    public void onUpdate(UpdateEvent event) {
        if (!this.shouldRun()) {
            this.expectedTeleport = false;
            this.packetQueue.clear();
            return;
        }

        if (this.timer.timeElapsed(260L)) {
            this.timer.resetTime();

            if (!this.packetQueue.isEmpty()) {
                PacketUtil.sendPacketNoEvent(this.packetQueue.poll());
            }
        }
    }

    boolean shouldRun() {
        return mc.thePlayer != null && mc.thePlayer.ticksExisted > 5;
    }

    boolean isInventory(short action) {
        return action > 0 && action < 100;
    }


}
