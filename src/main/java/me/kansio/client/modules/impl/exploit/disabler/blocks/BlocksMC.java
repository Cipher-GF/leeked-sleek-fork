package me.kansio.client.modules.impl.exploit.disabler.blocks;

import me.kansio.client.Client;
import me.kansio.client.event.impl.PacketEvent;
import me.kansio.client.event.impl.UpdateEvent;
import me.kansio.client.modules.impl.exploit.Disabler;
import me.kansio.client.modules.impl.exploit.disabler.DisablerMode;
import me.kansio.client.modules.impl.visuals.ClickGUI;
import me.kansio.client.utils.chat.ChatUtil;
import me.kansio.client.utils.math.Stopwatch;
import me.kansio.client.utils.network.PacketUtil;
import net.minecraft.init.Items;
import net.minecraft.network.Packet;
import net.minecraft.network.play.client.*;
import net.minecraft.network.play.server.S08PacketPlayerPosLook;

import java.util.Queue;
import java.util.concurrent.ConcurrentLinkedDeque;

public class BlocksMC extends DisablerMode {

    public BlocksMC() {
        super("BlocksMC");
    }

    private final Queue<Packet<?>> retardQueue = new ConcurrentLinkedDeque<>();
    private boolean expectedTeleport;
    private final Stopwatch timer = new Stopwatch();

    @Override
    public void onEnable() {
        this.expectedTeleport = false;
        retardQueue.clear();
        this.timer.resetTime();
    }

    @Override
    public void onPacket(PacketEvent event) {
        if (!this.shouldRun()) return;

        if (event.getPacket() instanceof C00PacketKeepAlive) {
            retardQueue.add(event.getPacket());
            event.setCancelled(true);
        }

        if (event.getPacket() instanceof C0FPacketConfirmTransaction) {
            this.retardQueue.add(event.getPacket());
            event.setCancelled(true);
        }

        if (event.getPacket() instanceof C0BPacketEntityAction) {
            event.setCancelled(true);
        }

        if (event.getPacket() instanceof C03PacketPlayer) {
            C03PacketPlayer c03PacketPlayer = event.getPacket();

            if (mc.thePlayer.ticksExisted % 5 == 0)
                PacketUtil.sendPacketNoEvent(new C0CPacketInput());

            if (mc.thePlayer.ticksExisted % 25 == 0) {
                this.expectedTeleport = true;

                c03PacketPlayer.y = 0.015625;
                c03PacketPlayer.onGround = false;
            }
        }

        if (event.getPacket() instanceof S08PacketPlayerPosLook && this.expectedTeleport) {
            S08PacketPlayerPosLook p = event.getPacket();
            this.expectedTeleport = false;

            event.setCancelled(true);

            PacketUtil.sendPacketNoEvent(new C03PacketPlayer
                    .C06PacketPlayerPosLook(p.getX(),
                    p.getY(),
                    p.getZ(),
                    p.getYaw(),
                    p.getPitch(), true));

        }
    }

    @Override
    public void onUpdate(UpdateEvent event) {
        if (!this.shouldRun()) {
            this.expectedTeleport = false;
            this.timer.resetTime();
            this.retardQueue.clear();
            return;
        }

        if (!this.retardQueue.isEmpty()) {
            if (retardQueue.size() > 350) {
                for (int i = 0; i < 10000; i++) {
                    if (retardQueue.size() < 200) {
                        return;
                    }

                    PacketUtil.sendPacketNoEvent(this.retardQueue.poll());
                }
            }
        }
    }

    boolean shouldRun() {
        if (getDisabler().autoDisable.getValue()) {

            //prevent possible npe
            if (mc.thePlayer == null) return false;
            if (mc.thePlayer.inventory == null) return false;

            if (mc.thePlayer.inventory.hasItem(Items.compass)) {
                // player only has compass in lobby's which have ncp, so it doesn't run yet
                return false;
            }
        }
        return mc.thePlayer != null && mc.thePlayer.ticksExisted > 5;
    }

    boolean isLegitC0F(short action) {
        return action > 0 && action < 100;
    }



}
