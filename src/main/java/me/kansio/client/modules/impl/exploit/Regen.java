package me.kansio.client.modules.impl.exploit;

import dorkbox.messageBus.annotations.Subscribe;
import me.kansio.client.event.impl.UpdateEvent;
import me.kansio.client.modules.api.ModuleCategory;
import me.kansio.client.modules.impl.Module;
import me.kansio.client.property.value.BooleanValue;
import me.kansio.client.property.value.ModeValue;
import me.kansio.client.property.value.NumberValue;
import me.kansio.client.utils.chat.ChatUtil;
import me.kansio.client.utils.network.PacketUtil;
import me.kansio.client.utils.player.PlayerUtil;
import net.minecraft.network.play.client.C03PacketPlayer;
import net.minecraft.network.play.client.C08PacketPlayerBlockPlacement;

public class Regen extends Module {

    private NumberValue<Double> health = new NumberValue<>("Health", this, 15.0, 1.0, 20.0, 1.0);
    private NumberValue<Double> packets = new NumberValue<>("Packets", this, 15.0, 1.0, 200.0, 1.0);

    private final ModeValue modeValue = new ModeValue("Mode", this, "Vanilla", "Matrix" /*/ Credit: Dort /*/);
    private final BooleanValue timerBypass = new BooleanValue("Timer Bypass", this, true);

    public Regen() {
        super("Regen", ModuleCategory.EXPLOIT);
        register(timerBypass, health, packets);
    }

    @Override
    public void onEnable() {
        if (modeValue.getValue().equalsIgnoreCase("matrix")) {
            ChatUtil.log("Credit to Dort");
        }
    }

    @Subscribe
    public void onUpdate(UpdateEvent event) {
        if (mc.thePlayer.getHealth() >= health.getValue()) return;
        if (!mc.thePlayer.onGround) return;

        switch (modeValue.getValue()) {
            case "Vanilla": {
                for (int i = 0; i < packets.getValue(); i++) {
                    mc.thePlayer.sendQueue.addToSendQueue(new C03PacketPlayer(true));
                }
                break;
            }
            case "Matrix": {
                for (int i = 0; i < packets.getValue().intValue(); i++) {
                    PacketUtil.sendPacketNoEvent(new C08PacketPlayerBlockPlacement(mc.thePlayer.getPosition().down(256), 256, null, 0, 0, 0));
                    if (timerBypass.getValue())
                        PacketUtil.sendPacket(timerBypass.getValue() ? new C03PacketPlayer.C04PacketPlayerPosition(mc.thePlayer.posX, mc.thePlayer.posY, mc.thePlayer.posZ, true) : new C03PacketPlayer(true));
                }
                break;
            }
        }
    }
}
