package me.kansio.client.modules.impl.exploit;

import dorkbox.messageBus.annotations.Subscribe;
import me.kansio.client.event.PacketDirection;
import me.kansio.client.event.impl.PacketEvent;
import me.kansio.client.event.impl.UpdateEvent;
import me.kansio.client.modules.api.ModuleCategory;
import me.kansio.client.modules.impl.Module;
import me.kansio.client.property.value.ModeValue;
import me.kansio.client.utils.chat.ChatUtil;
import me.kansio.client.utils.network.PacketUtil;
import net.minecraft.network.Packet;
import net.minecraft.network.play.client.*;

import java.util.LinkedList;

public class Disabler extends Module {

    private ModeValue modeValue = new ModeValue("Mode", this, "Keep-Alive", "Vehicle", "Verus Combat", "Karhu Combat");
    private LinkedList<Packet> packetQueue = new LinkedList<>();

    public Disabler() {
        super("Disabler", ModuleCategory.EXPLOIT);
        register(modeValue);
    }

    @Override
    public void onEnable() {
        packetQueue.clear();

    }

    @Subscribe
    public void onSendPacket(PacketEvent event) {
        Packet packet = event.getPacket();

        if (event.getPacketDirection() != PacketDirection.OUTBOUND)  return;

        switch (modeValue.getValueAsString()) {
            case "Keep-Alive": {
                if (event.getPacket() instanceof C00PacketKeepAlive) {
                    event.setCancelled(true);
                }
                break;
            }
            case "Vehicle": {
                if (event.getPacket() instanceof C03PacketPlayer) {
                    PacketUtil.sendPacketNoEvent(new C0CPacketInput());
                }
                break;
            }

            case "Karhu Combat":
            case "Verus Combat": {
                if (mc.thePlayer.ticksExisted > 10) {
                    if (event.getPacket() instanceof C00PacketKeepAlive) {
                        event.setCancelled(true);
                        packetQueue.add(event.getPacket());
                    } else if (event.getPacket() instanceof C0FPacketConfirmTransaction) {
                        event.setCancelled(true);
                        packetQueue.add(event.getPacket());
                    } else if (event.getPacket() instanceof C0BPacketEntityAction && modeValue.equals("Verus Combat")) {
                        event.setCancelled(true);
                        packetQueue.add(event.getPacket());
                    }
                }
                break;
            }
        }
    }


    @Subscribe
    public void onUpdate(UpdateEvent event) {
        switch (modeValue.getValueAsString()) {
            case "Verus Combat": {
                if (mc.thePlayer.ticksExisted > 10) {
                    if (mc.thePlayer.ticksExisted % 180 == 0) {
                        if (packetQueue.size() > 22) {
                            PacketUtil.sendPacketNoEvent(packetQueue.poll());
                        }
                    }
                }
                break;
            }
        }
    }

    @Override
    public String getSuffix() {
        return " " + modeValue.getValueAsString();
    }
}
