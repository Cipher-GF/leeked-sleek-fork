package me.kansio.client.modules.impl.exploit.disabler.watchdog;

import me.kansio.client.event.impl.PacketEvent;
import me.kansio.client.event.impl.UpdateEvent;
import me.kansio.client.modules.impl.exploit.disabler.DisablerMode;
import me.kansio.client.utils.chat.ChatUtil;
import me.kansio.client.utils.math.Stopwatch;
import me.kansio.client.utils.moshi.IPacketUtils;
import me.kansio.client.utils.network.TimedPacket;
import net.minecraft.network.play.client.C00PacketKeepAlive;
import net.minecraft.network.play.client.C0FPacketConfirmTransaction;
import net.minecraft.network.play.server.S08PacketPlayerPosLook;

import java.util.LinkedList;
import java.util.concurrent.TimeUnit;

public class WatchdogStrafe extends DisablerMode implements IPacketUtils {
    LinkedList<TimedPacket> queue = new LinkedList<>();
    LinkedList<TimedPacket> remove = new LinkedList<>();
    private boolean disabling = false;
    private Stopwatch stopwatch = new Stopwatch();

    public WatchdogStrafe() {
        super("Watchdog Strafe");
    }

    @Override
    public void onEnable() {
        disabling = false;
        queue.clear();
        remove.clear();

        ChatUtil.log("thx moshi for the disabler <3");
    }

    @Override
    public void onUpdate(UpdateEvent event) {
        if (mc.thePlayer.ticksExisted < 5) {
            stopwatch.resetTime();
        }
        if (stopwatch.timeElapsed(TimeUnit.SECONDS.toMillis(10L))) {
            ChatUtil.log("called");
            disabling = true;
            // he didnt explain fully
            queue.forEach(packet -> {
                if (packet.postAddTime() >= 1000) {
                    ChatUtil.log("Sending queued " + packet.getPacket().getClass().getSimpleName());
                    packet.sendSilent();
                    remove.add(packet);
                }
            });
            queue.removeIf(p -> remove.contains(p));
            remove.clear();
            stopwatch.resetTime();
        }
        if (disabling && stopwatch.timeElapsed(3000)) {
            ChatUtil.log("test");
            disabling = false;
            stopwatch.resetTime();
        }
//        try {
//            if (mc.thePlayer == null || mc.thePlayer.ticksExisted <= 5) {
//                queue.clear();
//                return;
//            }
//            queue.forEach(packet -> {
//
//                if (packet.postAddTime() >= 3000) {
////                    ChatUtil.log(packet.getPacket().getClass().getSimpleName());
//                    packet.sendSilent();
//                    remove.add(packet);
//                }
//            });
//            queue.removeIf(p -> remove.contains(p));
//            remove.clear();
//        } catch (Throwable e) {
//            e.printStackTrace();
//        }
        // dont ask it errored

    }

    @Override
    public void onPacket(PacketEvent event) {
        if (mc.thePlayer == null || mc.thePlayer.ticksExisted <= 5) {
            return;
        }// what did u say?
        if (disabling) {
            if (event.getPacket() instanceof C0FPacketConfirmTransaction) {
                queue.add(create(event.getPacket()));
                event.setCancelled(true);
            }
            if (event.getPacket() instanceof C00PacketKeepAlive) {
                queue.add(create(event.getPacket()));
                event.setCancelled(true);
            }
        }
    }

}
